<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="hopePictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABlAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigApk0y
        W8TyyuscSKWZ3OAoHJJPYU+vxm/4KOftteJ/jl8R9R+CHgKG8tPDljqp0e8igBFzrd8kvleWQOfKEg2q
        n8ZAY/whQD9lLW6hvbeOe3ljngkUMksTBlYHoQRwRXyP/wAFRfjtr/wL/Zla58K6vPofiHXNVg0qC+s3
        2TwxlJJZWjbqp2xbdw5G/jBwa/NT4d/H79on/gm/4ql8K61pVxbaTITIfDniBWmsJc9ZbWVGwDzy0TlS
        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
</value>
  </data>
</root>