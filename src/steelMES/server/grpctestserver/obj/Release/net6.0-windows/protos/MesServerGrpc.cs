// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/mes_server.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SteelMES {
  public static partial class DB_Service
  {
    static readonly string __ServiceName = "SteelMES.DB_Service";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.prodHistoryInfoRequest> __Marshaller_SteelMES_prodHistoryInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.prodHistoryInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.prodHistoryInfoReply> __Marshaller_SteelMES_prodHistoryInfoReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.prodHistoryInfoReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.Empty> __Marshaller_SteelMES_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.DefectByProductIDRequest> __Marshaller_SteelMES_DefectByProductIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.DefectByProductIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.FactoryReply> __Marshaller_SteelMES_FactoryReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.FactoryReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.ProductionLineRequest> __Marshaller_SteelMES_ProductionLineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.ProductionLineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.ProductionLineReply> __Marshaller_SteelMES_ProductionLineReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.ProductionLineReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.MaterialReply> __Marshaller_SteelMES_MaterialReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.MaterialReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.SupplierReply> __Marshaller_SteelMES_SupplierReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.SupplierReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.UpdateMaterialQuantityRequest> __Marshaller_SteelMES_UpdateMaterialQuantityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.UpdateMaterialQuantityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.UpdateMaterialQuantityReply> __Marshaller_SteelMES_UpdateMaterialQuantityReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.UpdateMaterialQuantityReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.AddFactoryRequest> __Marshaller_SteelMES_AddFactoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.AddFactoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.AddFactoryReply> __Marshaller_SteelMES_AddFactoryReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.AddFactoryReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.DeleteFactoryRequest> __Marshaller_SteelMES_DeleteFactoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.DeleteFactoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.DeleteFactoryReply> __Marshaller_SteelMES_DeleteFactoryReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.DeleteFactoryReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.AddMaterialRequest> __Marshaller_SteelMES_AddMaterialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.AddMaterialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.AddMaterialReply> __Marshaller_SteelMES_AddMaterialReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.AddMaterialReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.ProductReply> __Marshaller_SteelMES_ProductReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.ProductReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.AddSupplierRequest> __Marshaller_SteelMES_AddSupplierRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.AddSupplierRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.AddSupplieReply> __Marshaller_SteelMES_AddSupplieReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.AddSupplieReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.DeleteSupplyRequest> __Marshaller_SteelMES_DeleteSupplyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.DeleteSupplyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.DeleteSupplyReply> __Marshaller_SteelMES_DeleteSupplyReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.DeleteSupplyReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.LoginRequest> __Marshaller_SteelMES_LoginRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.LoginRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.LoginReply> __Marshaller_SteelMES_LoginReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.LoginReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.UsersReply> __Marshaller_SteelMES_UsersReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.UsersReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.SearchUserRequest> __Marshaller_SteelMES_SearchUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.SearchUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.SearchUserReply> __Marshaller_SteelMES_SearchUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.SearchUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.UpdateUserLevelRequest> __Marshaller_SteelMES_UpdateUserLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.UpdateUserLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.UpdateUserLevelReply> __Marshaller_SteelMES_UpdateUserLevelReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.UpdateUserLevelReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.ProductOrderRequest> __Marshaller_SteelMES_ProductOrderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.ProductOrderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.ProductOrderResponse> __Marshaller_SteelMES_ProductOrderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.ProductOrderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SteelMES.ProductListReply> __Marshaller_SteelMES_ProductListReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SteelMES.ProductListReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.prodHistoryInfoRequest, global::SteelMES.prodHistoryInfoReply> __Method_reqProdHistory = new grpc::Method<global::SteelMES.prodHistoryInfoRequest, global::SteelMES.prodHistoryInfoReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "reqProdHistory",
        __Marshaller_SteelMES_prodHistoryInfoRequest,
        __Marshaller_SteelMES_prodHistoryInfoReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.Empty, global::SteelMES.prodHistoryInfoReply> __Method_GetAllDefects = new grpc::Method<global::SteelMES.Empty, global::SteelMES.prodHistoryInfoReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDefects",
        __Marshaller_SteelMES_Empty,
        __Marshaller_SteelMES_prodHistoryInfoReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.DefectByProductIDRequest, global::SteelMES.prodHistoryInfoReply> __Method_GetDefectsByProductID = new grpc::Method<global::SteelMES.DefectByProductIDRequest, global::SteelMES.prodHistoryInfoReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefectsByProductID",
        __Marshaller_SteelMES_DefectByProductIDRequest,
        __Marshaller_SteelMES_prodHistoryInfoReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.Empty, global::SteelMES.FactoryReply> __Method_GetFactoryData = new grpc::Method<global::SteelMES.Empty, global::SteelMES.FactoryReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFactoryData",
        __Marshaller_SteelMES_Empty,
        __Marshaller_SteelMES_FactoryReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.ProductionLineRequest, global::SteelMES.ProductionLineReply> __Method_GetProductionLineData = new grpc::Method<global::SteelMES.ProductionLineRequest, global::SteelMES.ProductionLineReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProductionLineData",
        __Marshaller_SteelMES_ProductionLineRequest,
        __Marshaller_SteelMES_ProductionLineReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.Empty, global::SteelMES.MaterialReply> __Method_GetMaterialData = new grpc::Method<global::SteelMES.Empty, global::SteelMES.MaterialReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMaterialData",
        __Marshaller_SteelMES_Empty,
        __Marshaller_SteelMES_MaterialReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.Empty, global::SteelMES.SupplierReply> __Method_GetSupplierData = new grpc::Method<global::SteelMES.Empty, global::SteelMES.SupplierReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSupplierData",
        __Marshaller_SteelMES_Empty,
        __Marshaller_SteelMES_SupplierReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.UpdateMaterialQuantityRequest, global::SteelMES.UpdateMaterialQuantityReply> __Method_UpdateMaterialQuantity = new grpc::Method<global::SteelMES.UpdateMaterialQuantityRequest, global::SteelMES.UpdateMaterialQuantityReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMaterialQuantity",
        __Marshaller_SteelMES_UpdateMaterialQuantityRequest,
        __Marshaller_SteelMES_UpdateMaterialQuantityReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.AddFactoryRequest, global::SteelMES.AddFactoryReply> __Method_AddFactory = new grpc::Method<global::SteelMES.AddFactoryRequest, global::SteelMES.AddFactoryReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddFactory",
        __Marshaller_SteelMES_AddFactoryRequest,
        __Marshaller_SteelMES_AddFactoryReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.DeleteFactoryRequest, global::SteelMES.DeleteFactoryReply> __Method_DeleteFactoryData = new grpc::Method<global::SteelMES.DeleteFactoryRequest, global::SteelMES.DeleteFactoryReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFactoryData",
        __Marshaller_SteelMES_DeleteFactoryRequest,
        __Marshaller_SteelMES_DeleteFactoryReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.AddMaterialRequest, global::SteelMES.AddMaterialReply> __Method_AddMaterial = new grpc::Method<global::SteelMES.AddMaterialRequest, global::SteelMES.AddMaterialReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddMaterial",
        __Marshaller_SteelMES_AddMaterialRequest,
        __Marshaller_SteelMES_AddMaterialReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.Empty, global::SteelMES.ProductReply> __Method_GetAllProductData = new grpc::Method<global::SteelMES.Empty, global::SteelMES.ProductReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllProductData",
        __Marshaller_SteelMES_Empty,
        __Marshaller_SteelMES_ProductReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.AddSupplierRequest, global::SteelMES.AddSupplieReply> __Method_AddSupplier = new grpc::Method<global::SteelMES.AddSupplierRequest, global::SteelMES.AddSupplieReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSupplier",
        __Marshaller_SteelMES_AddSupplierRequest,
        __Marshaller_SteelMES_AddSupplieReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.DeleteSupplyRequest, global::SteelMES.DeleteSupplyReply> __Method_DeleteSupplyData = new grpc::Method<global::SteelMES.DeleteSupplyRequest, global::SteelMES.DeleteSupplyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSupplyData",
        __Marshaller_SteelMES_DeleteSupplyRequest,
        __Marshaller_SteelMES_DeleteSupplyReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.LoginRequest, global::SteelMES.LoginReply> __Method_GetLogin = new grpc::Method<global::SteelMES.LoginRequest, global::SteelMES.LoginReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLogin",
        __Marshaller_SteelMES_LoginRequest,
        __Marshaller_SteelMES_LoginReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.Empty, global::SteelMES.UsersReply> __Method_GetAllUsersData = new grpc::Method<global::SteelMES.Empty, global::SteelMES.UsersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUsersData",
        __Marshaller_SteelMES_Empty,
        __Marshaller_SteelMES_UsersReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.SearchUserRequest, global::SteelMES.SearchUserReply> __Method_SearchUser = new grpc::Method<global::SteelMES.SearchUserRequest, global::SteelMES.SearchUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchUser",
        __Marshaller_SteelMES_SearchUserRequest,
        __Marshaller_SteelMES_SearchUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.UpdateUserLevelRequest, global::SteelMES.UpdateUserLevelReply> __Method_UpdateUserLevel = new grpc::Method<global::SteelMES.UpdateUserLevelRequest, global::SteelMES.UpdateUserLevelReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUserLevel",
        __Marshaller_SteelMES_UpdateUserLevelRequest,
        __Marshaller_SteelMES_UpdateUserLevelReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.ProductOrderRequest, global::SteelMES.ProductOrderResponse> __Method_CreateProductOrder = new grpc::Method<global::SteelMES.ProductOrderRequest, global::SteelMES.ProductOrderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProductOrder",
        __Marshaller_SteelMES_ProductOrderRequest,
        __Marshaller_SteelMES_ProductOrderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SteelMES.Empty, global::SteelMES.ProductListReply> __Method_GetProductList = new grpc::Method<global::SteelMES.Empty, global::SteelMES.ProductListReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProductList",
        __Marshaller_SteelMES_Empty,
        __Marshaller_SteelMES_ProductListReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SteelMES.MesServerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DB_Service</summary>
    [grpc::BindServiceMethod(typeof(DB_Service), "BindService")]
    public abstract partial class DB_ServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.prodHistoryInfoReply> reqProdHistory(global::SteelMES.prodHistoryInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.prodHistoryInfoReply> GetAllDefects(global::SteelMES.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.prodHistoryInfoReply> GetDefectsByProductID(global::SteelMES.DefectByProductIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.FactoryReply> GetFactoryData(global::SteelMES.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.ProductionLineReply> GetProductionLineData(global::SteelMES.ProductionLineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.MaterialReply> GetMaterialData(global::SteelMES.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.SupplierReply> GetSupplierData(global::SteelMES.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.UpdateMaterialQuantityReply> UpdateMaterialQuantity(global::SteelMES.UpdateMaterialQuantityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///공장 추가 rpc
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.AddFactoryReply> AddFactory(global::SteelMES.AddFactoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///공장 삭제 
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.DeleteFactoryReply> DeleteFactoryData(global::SteelMES.DeleteFactoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///원자재 추가 rpc
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.AddMaterialReply> AddMaterial(global::SteelMES.AddMaterialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 모든 제품 데이터 요청
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.ProductReply> GetAllProductData(global::SteelMES.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///공급업체 정보 추가
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.AddSupplieReply> AddSupplier(global::SteelMES.AddSupplierRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///공급업체 삭제 
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.DeleteSupplyReply> DeleteSupplyData(global::SteelMES.DeleteSupplyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///로그인정보
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.LoginReply> GetLogin(global::SteelMES.LoginRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 모든 회원 데이터 요청
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.UsersReply> GetAllUsersData(global::SteelMES.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 회원 데이터 검색
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.SearchUserReply> SearchUser(global::SteelMES.SearchUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 회원 데이터 업데이트
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.UpdateUserLevelReply> UpdateUserLevel(global::SteelMES.UpdateUserLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 제품 주문 추가
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.ProductOrderResponse> CreateProductOrder(global::SteelMES.ProductOrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 제품 목록 가져오기
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SteelMES.ProductListReply> GetProductList(global::SteelMES.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DB_Service</summary>
    public partial class DB_ServiceClient : grpc::ClientBase<DB_ServiceClient>
    {
      /// <summary>Creates a new client for DB_Service</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DB_ServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DB_Service that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DB_ServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DB_ServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DB_ServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.prodHistoryInfoReply reqProdHistory(global::SteelMES.prodHistoryInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return reqProdHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.prodHistoryInfoReply reqProdHistory(global::SteelMES.prodHistoryInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_reqProdHistory, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.prodHistoryInfoReply> reqProdHistoryAsync(global::SteelMES.prodHistoryInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return reqProdHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.prodHistoryInfoReply> reqProdHistoryAsync(global::SteelMES.prodHistoryInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_reqProdHistory, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.prodHistoryInfoReply GetAllDefects(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDefects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.prodHistoryInfoReply GetAllDefects(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllDefects, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.prodHistoryInfoReply> GetAllDefectsAsync(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDefectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.prodHistoryInfoReply> GetAllDefectsAsync(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllDefects, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.prodHistoryInfoReply GetDefectsByProductID(global::SteelMES.DefectByProductIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefectsByProductID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.prodHistoryInfoReply GetDefectsByProductID(global::SteelMES.DefectByProductIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefectsByProductID, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.prodHistoryInfoReply> GetDefectsByProductIDAsync(global::SteelMES.DefectByProductIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefectsByProductIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.prodHistoryInfoReply> GetDefectsByProductIDAsync(global::SteelMES.DefectByProductIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefectsByProductID, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.FactoryReply GetFactoryData(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFactoryData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.FactoryReply GetFactoryData(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFactoryData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.FactoryReply> GetFactoryDataAsync(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFactoryDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.FactoryReply> GetFactoryDataAsync(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFactoryData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductionLineReply GetProductionLineData(global::SteelMES.ProductionLineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductionLineData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductionLineReply GetProductionLineData(global::SteelMES.ProductionLineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProductionLineData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductionLineReply> GetProductionLineDataAsync(global::SteelMES.ProductionLineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductionLineDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductionLineReply> GetProductionLineDataAsync(global::SteelMES.ProductionLineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProductionLineData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.MaterialReply GetMaterialData(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMaterialData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.MaterialReply GetMaterialData(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMaterialData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.MaterialReply> GetMaterialDataAsync(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMaterialDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.MaterialReply> GetMaterialDataAsync(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMaterialData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.SupplierReply GetSupplierData(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSupplierData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.SupplierReply GetSupplierData(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSupplierData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.SupplierReply> GetSupplierDataAsync(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSupplierDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.SupplierReply> GetSupplierDataAsync(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSupplierData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.UpdateMaterialQuantityReply UpdateMaterialQuantity(global::SteelMES.UpdateMaterialQuantityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMaterialQuantity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.UpdateMaterialQuantityReply UpdateMaterialQuantity(global::SteelMES.UpdateMaterialQuantityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMaterialQuantity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.UpdateMaterialQuantityReply> UpdateMaterialQuantityAsync(global::SteelMES.UpdateMaterialQuantityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMaterialQuantityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.UpdateMaterialQuantityReply> UpdateMaterialQuantityAsync(global::SteelMES.UpdateMaterialQuantityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMaterialQuantity, null, options, request);
      }
      /// <summary>
      ///공장 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.AddFactoryReply AddFactory(global::SteelMES.AddFactoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFactory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공장 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.AddFactoryReply AddFactory(global::SteelMES.AddFactoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddFactory, null, options, request);
      }
      /// <summary>
      ///공장 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.AddFactoryReply> AddFactoryAsync(global::SteelMES.AddFactoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFactoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공장 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.AddFactoryReply> AddFactoryAsync(global::SteelMES.AddFactoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddFactory, null, options, request);
      }
      /// <summary>
      ///공장 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.DeleteFactoryReply DeleteFactoryData(global::SteelMES.DeleteFactoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFactoryData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공장 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.DeleteFactoryReply DeleteFactoryData(global::SteelMES.DeleteFactoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFactoryData, null, options, request);
      }
      /// <summary>
      ///공장 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.DeleteFactoryReply> DeleteFactoryDataAsync(global::SteelMES.DeleteFactoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFactoryDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공장 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.DeleteFactoryReply> DeleteFactoryDataAsync(global::SteelMES.DeleteFactoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFactoryData, null, options, request);
      }
      /// <summary>
      ///원자재 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.AddMaterialReply AddMaterial(global::SteelMES.AddMaterialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMaterial(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///원자재 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.AddMaterialReply AddMaterial(global::SteelMES.AddMaterialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddMaterial, null, options, request);
      }
      /// <summary>
      ///원자재 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.AddMaterialReply> AddMaterialAsync(global::SteelMES.AddMaterialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMaterialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///원자재 추가 rpc
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.AddMaterialReply> AddMaterialAsync(global::SteelMES.AddMaterialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddMaterial, null, options, request);
      }
      /// <summary>
      /// 모든 제품 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductReply GetAllProductData(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllProductData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 모든 제품 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductReply GetAllProductData(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllProductData, null, options, request);
      }
      /// <summary>
      /// 모든 제품 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductReply> GetAllProductDataAsync(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllProductDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 모든 제품 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductReply> GetAllProductDataAsync(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllProductData, null, options, request);
      }
      /// <summary>
      ///공급업체 정보 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.AddSupplieReply AddSupplier(global::SteelMES.AddSupplierRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSupplier(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공급업체 정보 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.AddSupplieReply AddSupplier(global::SteelMES.AddSupplierRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSupplier, null, options, request);
      }
      /// <summary>
      ///공급업체 정보 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.AddSupplieReply> AddSupplierAsync(global::SteelMES.AddSupplierRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSupplierAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공급업체 정보 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.AddSupplieReply> AddSupplierAsync(global::SteelMES.AddSupplierRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSupplier, null, options, request);
      }
      /// <summary>
      ///공급업체 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.DeleteSupplyReply DeleteSupplyData(global::SteelMES.DeleteSupplyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSupplyData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공급업체 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.DeleteSupplyReply DeleteSupplyData(global::SteelMES.DeleteSupplyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSupplyData, null, options, request);
      }
      /// <summary>
      ///공급업체 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.DeleteSupplyReply> DeleteSupplyDataAsync(global::SteelMES.DeleteSupplyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSupplyDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///공급업체 삭제 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.DeleteSupplyReply> DeleteSupplyDataAsync(global::SteelMES.DeleteSupplyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSupplyData, null, options, request);
      }
      /// <summary>
      ///로그인정보
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.LoginReply GetLogin(global::SteelMES.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLogin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///로그인정보
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.LoginReply GetLogin(global::SteelMES.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLogin, null, options, request);
      }
      /// <summary>
      ///로그인정보
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.LoginReply> GetLoginAsync(global::SteelMES.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///로그인정보
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.LoginReply> GetLoginAsync(global::SteelMES.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLogin, null, options, request);
      }
      /// <summary>
      /// 모든 회원 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.UsersReply GetAllUsersData(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsersData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 모든 회원 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.UsersReply GetAllUsersData(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllUsersData, null, options, request);
      }
      /// <summary>
      /// 모든 회원 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.UsersReply> GetAllUsersDataAsync(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsersDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 모든 회원 데이터 요청
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.UsersReply> GetAllUsersDataAsync(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllUsersData, null, options, request);
      }
      /// <summary>
      /// 회원 데이터 검색
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.SearchUserReply SearchUser(global::SteelMES.SearchUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 회원 데이터 검색
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.SearchUserReply SearchUser(global::SteelMES.SearchUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchUser, null, options, request);
      }
      /// <summary>
      /// 회원 데이터 검색
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.SearchUserReply> SearchUserAsync(global::SteelMES.SearchUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 회원 데이터 검색
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.SearchUserReply> SearchUserAsync(global::SteelMES.SearchUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchUser, null, options, request);
      }
      /// <summary>
      /// 회원 데이터 업데이트
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.UpdateUserLevelReply UpdateUserLevel(global::SteelMES.UpdateUserLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 회원 데이터 업데이트
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.UpdateUserLevelReply UpdateUserLevel(global::SteelMES.UpdateUserLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUserLevel, null, options, request);
      }
      /// <summary>
      /// 회원 데이터 업데이트
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.UpdateUserLevelReply> UpdateUserLevelAsync(global::SteelMES.UpdateUserLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 회원 데이터 업데이트
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.UpdateUserLevelReply> UpdateUserLevelAsync(global::SteelMES.UpdateUserLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUserLevel, null, options, request);
      }
      /// <summary>
      /// 제품 주문 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductOrderResponse CreateProductOrder(global::SteelMES.ProductOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 제품 주문 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductOrderResponse CreateProductOrder(global::SteelMES.ProductOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProductOrder, null, options, request);
      }
      /// <summary>
      /// 제품 주문 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductOrderResponse> CreateProductOrderAsync(global::SteelMES.ProductOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 제품 주문 추가
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductOrderResponse> CreateProductOrderAsync(global::SteelMES.ProductOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProductOrder, null, options, request);
      }
      /// <summary>
      /// 제품 목록 가져오기
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductListReply GetProductList(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 제품 목록 가져오기
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SteelMES.ProductListReply GetProductList(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProductList, null, options, request);
      }
      /// <summary>
      /// 제품 목록 가져오기
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductListReply> GetProductListAsync(global::SteelMES.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 제품 목록 가져오기
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SteelMES.ProductListReply> GetProductListAsync(global::SteelMES.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProductList, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DB_ServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DB_ServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DB_ServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_reqProdHistory, serviceImpl.reqProdHistory)
          .AddMethod(__Method_GetAllDefects, serviceImpl.GetAllDefects)
          .AddMethod(__Method_GetDefectsByProductID, serviceImpl.GetDefectsByProductID)
          .AddMethod(__Method_GetFactoryData, serviceImpl.GetFactoryData)
          .AddMethod(__Method_GetProductionLineData, serviceImpl.GetProductionLineData)
          .AddMethod(__Method_GetMaterialData, serviceImpl.GetMaterialData)
          .AddMethod(__Method_GetSupplierData, serviceImpl.GetSupplierData)
          .AddMethod(__Method_UpdateMaterialQuantity, serviceImpl.UpdateMaterialQuantity)
          .AddMethod(__Method_AddFactory, serviceImpl.AddFactory)
          .AddMethod(__Method_DeleteFactoryData, serviceImpl.DeleteFactoryData)
          .AddMethod(__Method_AddMaterial, serviceImpl.AddMaterial)
          .AddMethod(__Method_GetAllProductData, serviceImpl.GetAllProductData)
          .AddMethod(__Method_AddSupplier, serviceImpl.AddSupplier)
          .AddMethod(__Method_DeleteSupplyData, serviceImpl.DeleteSupplyData)
          .AddMethod(__Method_GetLogin, serviceImpl.GetLogin)
          .AddMethod(__Method_GetAllUsersData, serviceImpl.GetAllUsersData)
          .AddMethod(__Method_SearchUser, serviceImpl.SearchUser)
          .AddMethod(__Method_UpdateUserLevel, serviceImpl.UpdateUserLevel)
          .AddMethod(__Method_CreateProductOrder, serviceImpl.CreateProductOrder)
          .AddMethod(__Method_GetProductList, serviceImpl.GetProductList).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DB_ServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_reqProdHistory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.prodHistoryInfoRequest, global::SteelMES.prodHistoryInfoReply>(serviceImpl.reqProdHistory));
      serviceBinder.AddMethod(__Method_GetAllDefects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.Empty, global::SteelMES.prodHistoryInfoReply>(serviceImpl.GetAllDefects));
      serviceBinder.AddMethod(__Method_GetDefectsByProductID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.DefectByProductIDRequest, global::SteelMES.prodHistoryInfoReply>(serviceImpl.GetDefectsByProductID));
      serviceBinder.AddMethod(__Method_GetFactoryData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.Empty, global::SteelMES.FactoryReply>(serviceImpl.GetFactoryData));
      serviceBinder.AddMethod(__Method_GetProductionLineData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.ProductionLineRequest, global::SteelMES.ProductionLineReply>(serviceImpl.GetProductionLineData));
      serviceBinder.AddMethod(__Method_GetMaterialData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.Empty, global::SteelMES.MaterialReply>(serviceImpl.GetMaterialData));
      serviceBinder.AddMethod(__Method_GetSupplierData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.Empty, global::SteelMES.SupplierReply>(serviceImpl.GetSupplierData));
      serviceBinder.AddMethod(__Method_UpdateMaterialQuantity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.UpdateMaterialQuantityRequest, global::SteelMES.UpdateMaterialQuantityReply>(serviceImpl.UpdateMaterialQuantity));
      serviceBinder.AddMethod(__Method_AddFactory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.AddFactoryRequest, global::SteelMES.AddFactoryReply>(serviceImpl.AddFactory));
      serviceBinder.AddMethod(__Method_DeleteFactoryData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.DeleteFactoryRequest, global::SteelMES.DeleteFactoryReply>(serviceImpl.DeleteFactoryData));
      serviceBinder.AddMethod(__Method_AddMaterial, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.AddMaterialRequest, global::SteelMES.AddMaterialReply>(serviceImpl.AddMaterial));
      serviceBinder.AddMethod(__Method_GetAllProductData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.Empty, global::SteelMES.ProductReply>(serviceImpl.GetAllProductData));
      serviceBinder.AddMethod(__Method_AddSupplier, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.AddSupplierRequest, global::SteelMES.AddSupplieReply>(serviceImpl.AddSupplier));
      serviceBinder.AddMethod(__Method_DeleteSupplyData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.DeleteSupplyRequest, global::SteelMES.DeleteSupplyReply>(serviceImpl.DeleteSupplyData));
      serviceBinder.AddMethod(__Method_GetLogin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.LoginRequest, global::SteelMES.LoginReply>(serviceImpl.GetLogin));
      serviceBinder.AddMethod(__Method_GetAllUsersData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.Empty, global::SteelMES.UsersReply>(serviceImpl.GetAllUsersData));
      serviceBinder.AddMethod(__Method_SearchUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.SearchUserRequest, global::SteelMES.SearchUserReply>(serviceImpl.SearchUser));
      serviceBinder.AddMethod(__Method_UpdateUserLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.UpdateUserLevelRequest, global::SteelMES.UpdateUserLevelReply>(serviceImpl.UpdateUserLevel));
      serviceBinder.AddMethod(__Method_CreateProductOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.ProductOrderRequest, global::SteelMES.ProductOrderResponse>(serviceImpl.CreateProductOrder));
      serviceBinder.AddMethod(__Method_GetProductList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SteelMES.Empty, global::SteelMES.ProductListReply>(serviceImpl.GetProductList));
    }

  }
}
#endregion
